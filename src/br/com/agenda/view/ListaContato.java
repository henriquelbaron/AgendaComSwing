/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.agenda.view;

import br.com.agenda.bens.Contato;
import br.com.agenda.dao.ContatoDao;
import br.com.agenda.daoimpl.ContatoDaoImpl;
import br.com.agenda.daoimpl.Principal;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xAcer
 */
public class ListaContato extends javax.swing.JPanel {

    /**
     * Creates new form ListarContato
     */
    private static ContatoDao contatoDao;
    private static List<Contato> contatos;
    private static Contato contato;

    public ListaContato() {
        initComponents();
        contatoDao = new ContatoDaoImpl();
        try {
            contatos = contatoDao.listarTodos();
            adicionarListaContatosTabela(contatos);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        bBuscar = new javax.swing.JButton();
        bEditar = new javax.swing.JButton();
        bNovo = new javax.swing.JButton();
        bExcluir = new javax.swing.JButton();
        textBusca = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableContatos = new javax.swing.JTable();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Mistral", 3, 48)); // NOI18N
        jLabel1.setText("CONTATOS");
        jLabel1.setPreferredSize(new java.awt.Dimension(200, 49));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 15, 3);
        add(jLabel1, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Busca");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(jLabel2, gridBagConstraints);

        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(bBuscar, gridBagConstraints);

        bEditar.setText("Editar");
        bEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(bEditar, gridBagConstraints);

        bNovo.setText("Novo");
        bNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNovoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(bNovo, gridBagConstraints);

        bExcluir.setText("Excluir");
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(bExcluir, gridBagConstraints);

        textBusca.setPreferredSize(new java.awt.Dimension(70, 20));
        textBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBuscaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel1.add(textBusca, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(jPanel1, gridBagConstraints);

        tableContatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableContatos);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        add(jScrollPane2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        boolean verifica = false;
        String concatena = "";

        for (Contato c : contatos) {
            if (c.getNome().equalsIgnoreCase(textBusca.getText())) {
                concatena += "\nNome " + c.getNome() + "" + "\nAniversario " + c.getDataNascimento()
                        + "\nEmail " + c.getEmail() + "\n";
                verifica = true;
            }
        }
        if (!verifica) {
            concatena = "Nome não encontrado";
        }
        JOptionPane.showMessageDialog(null, concatena);
            
        
    }//GEN-LAST:event_bBuscarActionPerformed

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed
        int linha = tableContatos.getSelectedRow();
        if (linha >= 0) {
            try {
                String idString = (String) tableContatos.getValueAt(linha, 0);
                Integer id = Integer.valueOf(idString);
                contatoDao.excluir(id);
                if (!contatoDao.excluir(id)) {
                    contatos.remove(linha);
                    adicionarListaContatosTabela(contatos);
                    JOptionPane.showMessageDialog(this, "Contato excluído com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, "Não foi possível excluir o contato!");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Seleciona na Tabela o \nContato a ser Excluido");
        }
    }//GEN-LAST:event_bExcluirActionPerformed

    private void bNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNovoActionPerformed
        contato = new Contato();
        Principal.adicionarNovoContato(contato);
    }//GEN-LAST:event_bNovoActionPerformed

    private void bEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarActionPerformed
        int linha = tableContatos.getSelectedRow();
        contato = new Contato();
        if (linha >= 0) {
            String StringId = (String) tableContatos.getValueAt(linha, 0);
            Integer id = Integer.parseInt(StringId);
            try {
                contato = (Contato) contatoDao.pesquisar(id);
                Principal.adicionarNovoContato(contato);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Seleciona na Tabela o \nContato a ser Editado");
            
        }

    }//GEN-LAST:event_bEditarActionPerformed

    private void textBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textBuscaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bEditar;
    private javax.swing.JButton bExcluir;
    private javax.swing.JButton bNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableContatos;
    private javax.swing.JTextField textBusca;
    // End of variables declaration//GEN-END:variables

    public void adicionarListaContatosTabela(List<Contato> contatos) {
        String[] colunas = {"Id", "Nome", "Email", "Tpo"};
        String[][] dados = new String[contatos.size()][colunas.length];
        for (int i = 0; i < contatos.size(); i++) {
            Contato c = contatos.get(i);
            dados[i][0] = c.getId().toString();
            dados[i][1] = c.getNome();
            dados[i][2] = c.getEmail();
            dados[i][3] = c.getTipoContato().getTipo();
        }
        DefaultTableModel modelo = new DefaultTableModel(dados, colunas);
        tableContatos.setModel(modelo);
    }

}
